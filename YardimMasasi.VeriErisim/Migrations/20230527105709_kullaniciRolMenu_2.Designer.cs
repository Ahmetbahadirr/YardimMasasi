// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YardimMasasi.VeriErisim;

#nullable disable

namespace YardimMasasi.VeriErisim.Migrations
{
    [DbContext(typeof(YardimMasasiContext))]
    [Migration("20230527105709_kullaniciRolMenu_2")]
    partial class kullaniciRolMenu_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("YardimMasasi.Nesneler.AltKonuNesneler.Db.AltKonu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnaKonuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<int?>("SurecTanimiId")
                        .HasColumnType("int");

                    b.Property<string>("Tanim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnaKonuId");

                    b.HasIndex("SurecTanimiId");

                    b.ToTable("AltKonular");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnaKonuId = 1,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7863),
                            Silindi = false,
                            Tanim = "Ekran Çalışmıyor"
                        },
                        new
                        {
                            Id = 2,
                            AnaKonuId = 1,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7866),
                            Silindi = false,
                            Tanim = "Bilgisayarım Açılmıyor"
                        },
                        new
                        {
                            Id = 3,
                            AnaKonuId = 1,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7868),
                            Silindi = false,
                            Tanim = "Klavye/Mouse Çalışmıyor"
                        },
                        new
                        {
                            Id = 4,
                            AnaKonuId = 2,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7869),
                            Silindi = false,
                            Tanim = "Sistem Genel Sorun"
                        },
                        new
                        {
                            Id = 5,
                            AnaKonuId = 2,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7870),
                            Silindi = false,
                            Tanim = "Ebys Açılmıyor"
                        },
                        new
                        {
                            Id = 6,
                            AnaKonuId = 2,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7874),
                            Silindi = false,
                            Tanim = "E-İmza çalışmıyor"
                        },
                        new
                        {
                            Id = 7,
                            AnaKonuId = 3,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7875),
                            Silindi = false,
                            Tanim = "Ebys sistemi erişemiyorum"
                        },
                        new
                        {
                            Id = 8,
                            AnaKonuId = 3,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7877),
                            Silindi = false,
                            Tanim = "Ortak klasöre erişemiyorum"
                        },
                        new
                        {
                            Id = 9,
                            AnaKonuId = 3,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7878),
                            Silindi = false,
                            Tanim = "Ağ bağlantı hatası"
                        },
                        new
                        {
                            Id = 10,
                            AnaKonuId = 4,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7881),
                            Silindi = false,
                            Tanim = "Profil tanımlama"
                        },
                        new
                        {
                            Id = 11,
                            AnaKonuId = 4,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7882),
                            Silindi = false,
                            Tanim = "Ebys tanımlama"
                        },
                        new
                        {
                            Id = 12,
                            AnaKonuId = 4,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7884),
                            Silindi = false,
                            Tanim = "Kullanıcı tanımlama"
                        },
                        new
                        {
                            Id = 13,
                            AnaKonuId = 5,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7885),
                            Silindi = false,
                            Tanim = "E-posta açılmıyor"
                        },
                        new
                        {
                            Id = 14,
                            AnaKonuId = 5,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7886),
                            Silindi = false,
                            Tanim = "Kota artırımı"
                        },
                        new
                        {
                            Id = 15,
                            AnaKonuId = 5,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7887),
                            Silindi = false,
                            Tanim = "Arşivleme Sorunu"
                        },
                        new
                        {
                            Id = 16,
                            AnaKonuId = 6,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7889),
                            Silindi = false,
                            Tanim = "Portal şifre sorunu"
                        },
                        new
                        {
                            Id = 17,
                            AnaKonuId = 6,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7890),
                            Silindi = false,
                            Tanim = "Şifre güncelleme sorunu"
                        },
                        new
                        {
                            Id = 18,
                            AnaKonuId = 6,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7893),
                            Silindi = false,
                            Tanim = "Domain şifresi sorunu"
                        });
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.AnaKonuNesneler.Db.AnaKonu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.Property<string>("Tanim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnaKonular");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7699),
                            Silindi = false,
                            Tanim = "Donanım Sorunları"
                        },
                        new
                        {
                            Id = 2,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7703),
                            Silindi = false,
                            Tanim = "Sistem Sorunları"
                        },
                        new
                        {
                            Id = 3,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7704),
                            Silindi = false,
                            Tanim = "Erişim Sorunları"
                        },
                        new
                        {
                            Id = 4,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7706),
                            Silindi = false,
                            Tanim = "Tanımlama Sorunları"
                        },
                        new
                        {
                            Id = 5,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7707),
                            Silindi = false,
                            Tanim = "E-posta Sorunları"
                        },
                        new
                        {
                            Id = 6,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7710),
                            Silindi = false,
                            Tanim = "Şifre Sorunları"
                        });
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.BirimNesneler.Db.Birim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Birimler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adi = "Yazılım ve Uygulama Müdürlüğü",
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7921),
                            Silindi = false
                        },
                        new
                        {
                            Id = 2,
                            Adi = "Donanım Müdürlüğü",
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7925),
                            Silindi = false
                        },
                        new
                        {
                            Id = 3,
                            Adi = "Network Müdürlüğü",
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7927),
                            Silindi = false
                        },
                        new
                        {
                            Id = 4,
                            Adi = "Sistem Müdürlüğü",
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7928),
                            Silindi = false
                        });
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.DuyuruNesneler.Db.Duyuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Metin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Duyurular");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.DuyuruNesneler.Db.DuyuruDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DuyuruId")
                        .HasColumnType("int");

                    b.Property<int>("MaddeNo")
                        .HasColumnType("int");

                    b.Property<string>("Metin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sıra")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DuyuruId");

                    b.ToTable("DuyuruDetaylar");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.EkipNesneler.Db.Ekip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BirimId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Silindi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BirimId");

                    b.ToTable("Ekipler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adi = "Ebys/E-imza Ekibi",
                            BirimId = 1,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7945),
                            Silindi = false
                        },
                        new
                        {
                            Id = 2,
                            Adi = "Portal Ekibi",
                            BirimId = 1,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7949),
                            Silindi = false
                        },
                        new
                        {
                            Id = 3,
                            Adi = "Bilgisayar Donanımları Ekibi",
                            BirimId = 2,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7951),
                            Silindi = false
                        },
                        new
                        {
                            Id = 4,
                            Adi = "Network Donanımları Ekibi",
                            BirimId = 2,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7952),
                            Silindi = false
                        },
                        new
                        {
                            Id = 5,
                            Adi = "Network Güvenlik Ekibi",
                            BirimId = 3,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7953),
                            Silindi = false
                        },
                        new
                        {
                            Id = 6,
                            Adi = "Network Erişim Ekibi",
                            BirimId = 3,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7955),
                            Silindi = false
                        },
                        new
                        {
                            Id = 7,
                            Adi = "Sunucu Ekibi",
                            BirimId = 4,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7956),
                            Silindi = false
                        },
                        new
                        {
                            Id = 8,
                            Adi = "Veri Tabanı Ekibi",
                            BirimId = 4,
                            OlusturmaTarihi = new DateTime(2023, 5, 27, 13, 57, 8, 997, DateTimeKind.Local).AddTicks(7958),
                            Silindi = false
                        });
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.GorevNesneler.Db.Gorev", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AltKonuId")
                        .HasColumnType("int");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BirimId")
                        .HasColumnType("int");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OluşturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SonİslemTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("TalepSahibiId")
                        .HasColumnType("int");

                    b.Property<int>("TeknisyenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Gorevler");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.GorevNesneler.Db.GorevIslem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Acıklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GorevId")
                        .HasColumnType("int");

                    b.Property<int>("HedefKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("IslemTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("IslemTuru")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GorevId");

                    b.ToTable("GorevIslem");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.GorevNesneler.Db.GorevMesaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GorevId")
                        .HasColumnType("int");

                    b.Property<int>("HedefKullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MesajTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("MesajTuru")
                        .HasColumnType("int");

                    b.Property<bool>("OkunduMu")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GorevId");

                    b.ToTable("GorevMesaj");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.HaberNesneler.Db.Haber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("YayinTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Haberler");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.HaberNesneler.Db.HaberBolum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HaberId")
                        .HasColumnType("int");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HaberId");

                    b.ToTable("HaberBolumler");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.KullaniciNesneler.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.KullaniciNesneler.KullaniciRol", b =>
                {
                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("KullaniciId", "RolId");

                    b.HasIndex("RolId");

                    b.ToTable("KullaniciRoller");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.KullaniciNesneler.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("HtmlClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Menuler");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.KullaniciNesneler.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("RolAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roller");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.KullaniciNesneler.RolMenu", b =>
                {
                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.HasKey("RolId", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("RolMenuler");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.SurecNesneler.Db.EkipAltKonu", b =>
                {
                    b.Property<int>("AltKonuId")
                        .HasColumnType("int");

                    b.Property<int>("EkipId")
                        .HasColumnType("int");

                    b.HasKey("AltKonuId", "EkipId");

                    b.HasIndex("EkipId");

                    b.ToTable("EkipAltKonular");

                    b.HasData(
                        new
                        {
                            AltKonuId = 1,
                            EkipId = 3
                        },
                        new
                        {
                            AltKonuId = 2,
                            EkipId = 3
                        },
                        new
                        {
                            AltKonuId = 3,
                            EkipId = 3
                        },
                        new
                        {
                            AltKonuId = 6,
                            EkipId = 1
                        },
                        new
                        {
                            AltKonuId = 5,
                            EkipId = 1
                        },
                        new
                        {
                            AltKonuId = 7,
                            EkipId = 1
                        },
                        new
                        {
                            AltKonuId = 11,
                            EkipId = 1
                        });
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.SurecNesneler.Db.Surec", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Sira")
                        .HasColumnType("int");

                    b.Property<int>("SurecTanimiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SurecTanimiId");

                    b.ToTable("Surecler");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.SurecNesneler.Db.SurecAdimi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AktifAdim")
                        .HasColumnType("bit");

                    b.Property<int>("BirimId")
                        .HasColumnType("int");

                    b.Property<int>("Sira")
                        .HasColumnType("int");

                    b.Property<int>("SurecId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BirimId");

                    b.HasIndex("SurecId");

                    b.ToTable("SurecAdimi");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.SurecNesneler.Db.SurecAdimiTanimi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BirimId")
                        .HasColumnType("int");

                    b.Property<int>("Sira")
                        .HasColumnType("int");

                    b.Property<int>("SurecTanimiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BirimId");

                    b.HasIndex("SurecTanimiId");

                    b.ToTable("SurecAdimiTanimi");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.SurecNesneler.Db.SurecTanimi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SurecTanimlari");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.AltKonuNesneler.Db.AltKonu", b =>
                {
                    b.HasOne("YardimMasasi.Nesneler.AnaKonuNesneler.Db.AnaKonu", "AnaKonu")
                        .WithMany("AltKonular")
                        .HasForeignKey("AnaKonuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YardimMasasi.Nesneler.SurecNesneler.Db.SurecTanimi", "SurecTanimi")
                        .WithMany("AltKonular")
                        .HasForeignKey("SurecTanimiId");

                    b.Navigation("AnaKonu");

                    b.Navigation("SurecTanimi");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.DuyuruNesneler.Db.DuyuruDetay", b =>
                {
                    b.HasOne("YardimMasasi.Nesneler.DuyuruNesneler.Db.Duyuru", "Duyuru")
                        .WithMany("Detaylar")
                        .HasForeignKey("DuyuruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Duyuru");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.EkipNesneler.Db.Ekip", b =>
                {
                    b.HasOne("YardimMasasi.Nesneler.BirimNesneler.Db.Birim", "Birim")
                        .WithMany("Ekipler")
                        .HasForeignKey("BirimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Birim");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.GorevNesneler.Db.GorevIslem", b =>
                {
                    b.HasOne("YardimMasasi.Nesneler.GorevNesneler.Db.Gorev", "Gorev")
                        .WithMany("Islemler")
                        .HasForeignKey("GorevId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gorev");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.GorevNesneler.Db.GorevMesaj", b =>
                {
                    b.HasOne("YardimMasasi.Nesneler.GorevNesneler.Db.Gorev", "Gorev")
                        .WithMany("Mesajlar")
                        .HasForeignKey("GorevId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gorev");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.HaberNesneler.Db.HaberBolum", b =>
                {
                    b.HasOne("YardimMasasi.Nesneler.HaberNesneler.Db.Haber", "Haber")
                        .WithMany("Bolumler")
                        .HasForeignKey("HaberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Haber");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.KullaniciNesneler.KullaniciRol", b =>
                {
                    b.HasOne("YardimMasasi.Nesneler.KullaniciNesneler.Kullanici", "Kullanici")
                        .WithMany("KullaniciRoller")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YardimMasasi.Nesneler.KullaniciNesneler.Rol", "Rol")
                        .WithMany("RolKullanicilar")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.KullaniciNesneler.RolMenu", b =>
                {
                    b.HasOne("YardimMasasi.Nesneler.KullaniciNesneler.Menu", "Menu")
                        .WithMany("MenuRoller")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YardimMasasi.Nesneler.KullaniciNesneler.Rol", "Rol")
                        .WithMany("RolMenuler")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.SurecNesneler.Db.EkipAltKonu", b =>
                {
                    b.HasOne("YardimMasasi.Nesneler.AltKonuNesneler.Db.AltKonu", "AltKonu")
                        .WithMany("Ekipler")
                        .HasForeignKey("AltKonuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YardimMasasi.Nesneler.EkipNesneler.Db.Ekip", "Ekip")
                        .WithMany("AltKonular")
                        .HasForeignKey("EkipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AltKonu");

                    b.Navigation("Ekip");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.SurecNesneler.Db.Surec", b =>
                {
                    b.HasOne("YardimMasasi.Nesneler.GorevNesneler.Db.Gorev", "Gorev")
                        .WithOne("Surec")
                        .HasForeignKey("YardimMasasi.Nesneler.SurecNesneler.Db.Surec", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YardimMasasi.Nesneler.SurecNesneler.Db.SurecTanimi", "SurecTanimi")
                        .WithMany("Surecler")
                        .HasForeignKey("SurecTanimiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gorev");

                    b.Navigation("SurecTanimi");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.SurecNesneler.Db.SurecAdimi", b =>
                {
                    b.HasOne("YardimMasasi.Nesneler.BirimNesneler.Db.Birim", "Birim")
                        .WithMany("SurecAdimlari")
                        .HasForeignKey("BirimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YardimMasasi.Nesneler.SurecNesneler.Db.Surec", "Surec")
                        .WithMany("SurecAdimlari")
                        .HasForeignKey("SurecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Birim");

                    b.Navigation("Surec");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.SurecNesneler.Db.SurecAdimiTanimi", b =>
                {
                    b.HasOne("YardimMasasi.Nesneler.BirimNesneler.Db.Birim", "Birim")
                        .WithMany("SurecAdimTanimlari")
                        .HasForeignKey("BirimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YardimMasasi.Nesneler.SurecNesneler.Db.SurecTanimi", "SurecTanimi")
                        .WithMany("SurecAdimlari")
                        .HasForeignKey("SurecTanimiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Birim");

                    b.Navigation("SurecTanimi");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.AltKonuNesneler.Db.AltKonu", b =>
                {
                    b.Navigation("Ekipler");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.AnaKonuNesneler.Db.AnaKonu", b =>
                {
                    b.Navigation("AltKonular");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.BirimNesneler.Db.Birim", b =>
                {
                    b.Navigation("Ekipler");

                    b.Navigation("SurecAdimTanimlari");

                    b.Navigation("SurecAdimlari");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.DuyuruNesneler.Db.Duyuru", b =>
                {
                    b.Navigation("Detaylar");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.EkipNesneler.Db.Ekip", b =>
                {
                    b.Navigation("AltKonular");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.GorevNesneler.Db.Gorev", b =>
                {
                    b.Navigation("Islemler");

                    b.Navigation("Mesajlar");

                    b.Navigation("Surec")
                        .IsRequired();
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.HaberNesneler.Db.Haber", b =>
                {
                    b.Navigation("Bolumler");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.KullaniciNesneler.Kullanici", b =>
                {
                    b.Navigation("KullaniciRoller");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.KullaniciNesneler.Menu", b =>
                {
                    b.Navigation("MenuRoller");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.KullaniciNesneler.Rol", b =>
                {
                    b.Navigation("RolKullanicilar");

                    b.Navigation("RolMenuler");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.SurecNesneler.Db.Surec", b =>
                {
                    b.Navigation("SurecAdimlari");
                });

            modelBuilder.Entity("YardimMasasi.Nesneler.SurecNesneler.Db.SurecTanimi", b =>
                {
                    b.Navigation("AltKonular");

                    b.Navigation("SurecAdimlari");

                    b.Navigation("Surecler");
                });
#pragma warning restore 612, 618
        }
    }
}
